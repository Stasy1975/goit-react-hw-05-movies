{"version":3,"file":"static/js/544.734d3ed4.chunk.js","mappings":"2JAoBA,IAjBkB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACnB,OACE,wBACGA,GACCA,EAAKC,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eACd,OACE,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaF,GAAxB,SACGC,KAFID,EAMZ,KAGR,C,iHCSD,UAtBa,WACX,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOL,EAAP,KAAaM,EAAb,KAcA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEKC,EAAAA,EAAAA,MAFL,OAERC,EAFQ,OAGdC,QAAQC,IAAIF,GACdJ,GAAQ,OAAII,IAJI,gDAMhBC,QAAQC,IAAR,MANgB,yDAAH,qDASjBJ,GACD,GAAE,KAGD,2BACE,SAAC,IAAD,CAAWR,KAAMA,KAGtB,C,sLCtBKa,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAMAR,EAAW,mCAAG,6FACzBE,QAAQC,MADiB,SAEHC,EAASK,IAAT,oBALL,QAKK,YAJJ,SAEO,uBAEjBR,EAFiB,EAEjBA,KAFiB,kBAGlBA,EAAKS,SAHa,2CAAH,qDAQXC,EAAe,mCAAG,WAAMC,GAAN,kGAEJR,EAASK,IAAI,gBAAiB,CACnDF,OAAQ,CACNK,MAAAA,KAJuB,uBAEnBX,EAFmB,EAEnBA,KAKRC,QAAQC,IAAIF,EAAKS,SAPU,kBAQpBT,EAAKS,SARe,gCAW3BG,MAAM,EAAD,IAXsB,yDAAH,sDAgBfC,EAAe,mCAAI,WAAOC,GAAP,yFACLX,EAASK,IAAT,iBAAuBM,IADlB,uBACpBd,EADoB,EACpBA,KACNC,QAAQC,IAAIF,GAFc,kBAGrBA,GAHqB,2CAAJ,sDAOfe,EAAe,mCAAI,WAAOD,GAAP,yFACLX,EAASK,IAAT,iBAAuBM,EAAvB,aADK,uBACpBd,EADoB,EACpBA,KADoB,kBAElBA,EAAKgB,MAFa,2CAAJ,sDAKfC,EAAe,mCAAI,WAAOH,GAAP,yFACLX,EAASK,IAAT,iBAAuBM,EAAvB,aADK,uBACpBd,EADoB,EACpBA,KACNC,QAAQC,IAAIF,EAAKS,SAFS,kBAGrBT,EAAKS,SAHgB,2CAAJ,sDAMfS,EAAY,SAAAP,GACvB,MAAc,KAAVA,GAA0B,OAAVA,EACXZ,IAEAW,EAAgBC,EAE1B,C","sources":["components/MovieList/MoviesList.jsx","pages/Home/Home.jsx","servisAPI/servisAPI.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ item }) => {\n  return (\n    <ul>\n      {item &&\n        item.map(({ id, original_title }) => {\n          return (\n            <li key={id}>\n              <NavLink to={`/movies/${id}`} >\n                {original_title}\n              </NavLink>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  item: PropTypes.array,\n  NavLink: PropTypes.element,\n};","import { getTrending } from '../../servisAPI/servisAPI';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport MovieList from '../../components/MovieList/MoviesList';\n\nconst Home = () => {\n  const [item, setItem] = useState([]);\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n          const data = await getTrending();\n          console.log(data)\n        setItem([...data]);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <main>\n      <MovieList item={item} />\n    </main>\n  );\n};\n\nexport default Home;\n\nHome.propTypes = {\n  item: PropTypes.array,\n  MovieList: PropTypes.element,\n};\n","import axios from 'axios';\n\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '0be6852ca8cd54f03df513633364c09a',\n  },\n});\nconst media_type = 'movie';\nconst time_window = 'week';\n\nexport const getTrending = async () => {\n  console.log();\n  const { data} = await instance.get(`/trending/${media_type}/${time_window}`);\n  return data.results;\n};\n\n\n\nexport const getSearchMovies = async query => {\n  try {\n    const { data } = await instance.get('/search/movie', {\n      params: {\n        query,\n      },\n    });\n    console.log(data.results)\n    return data.results;\n    \n  } catch (error) {\n    alert(error);\n  }\n};\n\n\nexport const getMovieDetails  = async (movieId) => {\n    const { data } = await instance.get(`/movie/${movieId}`);\n      console.log(data);\n    return data;\n};\n\n\nexport const getMovieCredits  = async (movieId) => {\n    const { data } = await instance.get(`/movie/${movieId}/credits`);\n       return data.cast;\n};\n\nexport const getMovieReviews  = async (movieId) => {\n    const { data } = await instance.get(`/movie/${movieId}/reviews`);\n      console.log(data.results);\n    return data.results;\n};\n\nexport const getMovies = query => {\n  if (query === '' || query === null)  {\n    return getTrending();\n  } else {\n    return getSearchMovies(query);\n  }\n};\n\n"],"names":["item","map","id","original_title","to","useState","setItem","useEffect","fetchMovies","getTrending","data","console","log","instance","axios","baseURL","params","api_key","get","results","getSearchMovies","query","alert","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","getMovies"],"sourceRoot":""}