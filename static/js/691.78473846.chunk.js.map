{"version":3,"file":"static/js/691.78473846.chunk.js","mappings":"2JAoBA,IAjBkB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACnB,OACE,wBACGA,GACCA,EAAKC,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eACd,OACE,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaF,GAAxB,SACGC,KAFID,EAMZ,KAGR,C,iJChBYG,E,OAAOC,EAAAA,IAAH,6C,iBC6CjB,EAvCe,WACb,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAO/BC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qGACEC,EAAAA,EAAAA,IAAUJ,GADZ,OACXK,EADW,OAEjBX,EAASW,GAFQ,2CAAH,qDAIhBF,GACD,GAAE,CAACH,IAMJ,OACE,UAACV,EAAD,YACE,kBAAMgB,SAnBW,SAAAC,GACnBA,EAAMC,iBACNT,EAAgB,CAAEC,MAAOL,GAC1B,EAgBG,WACE,kBACEc,KAAK,OACLC,MAAOf,EACPgB,KAAK,SACLC,SAXa,SAAAL,GACnBX,EAAaW,EAAMM,OAAOH,MAC3B,KAWK,mBAAQD,KAAK,SAAb,wBAEF,SAAC,IAAD,CAAWxB,KAAMQ,MAGtB,C,sLC1CKqB,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAMAC,EAAW,mCAAG,6FACzBC,QAAQC,MADiB,SAEHP,EAASb,IAAT,oBALL,QAKK,YAJJ,SAEO,uBAEjBI,EAFiB,EAEjBA,KAFiB,kBAGlBA,EAAKiB,SAHa,2CAAH,qDAQXC,EAAe,mCAAG,WAAMvB,GAAN,kGAEJc,EAASb,IAAI,gBAAiB,CACnDgB,OAAQ,CACNjB,MAAAA,KAJuB,uBAEnBK,EAFmB,EAEnBA,KAKRe,QAAQC,IAAIhB,EAAKiB,SAPU,kBAQpBjB,EAAKiB,SARe,gCAW3BE,MAAM,EAAD,IAXsB,yDAAH,sDAgBfC,EAAe,mCAAI,WAAOC,GAAP,yFACLZ,EAASb,IAAT,iBAAuByB,IADlB,uBACpBrB,EADoB,EACpBA,KACNe,QAAQC,IAAIhB,GAFc,kBAGrBA,GAHqB,2CAAJ,sDAOfsB,EAAe,mCAAI,WAAOD,GAAP,yFACLZ,EAASb,IAAT,iBAAuByB,EAAvB,aADK,uBACpBrB,EADoB,EACpBA,KADoB,kBAElBA,EAAKuB,MAFa,2CAAJ,sDAKfC,EAAe,mCAAI,WAAOH,GAAP,yFACLZ,EAASb,IAAT,iBAAuByB,EAAvB,aADK,uBACpBrB,EADoB,EACpBA,KACNe,QAAQC,IAAIhB,EAAKiB,SAFS,kBAGrBjB,EAAKiB,SAHgB,2CAAJ,sDAMflB,EAAY,SAAAJ,GACvB,MAAc,KAAVA,GAA0B,OAAVA,EACXmB,IAEAI,EAAgBvB,EAE1B,C","sources":["components/MovieList/MoviesList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","servisAPI/servisAPI.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ item }) => {\n  return (\n    <ul>\n      {item &&\n        item.map(({ id, original_title }) => {\n          return (\n            <li key={id}>\n              <NavLink to={`/movies/${id}`} >\n                {original_title}\n              </NavLink>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  item: PropTypes.array,\n  NavLink: PropTypes.element,\n};","import styled from '@emotion/styled'\n\nexport const Form = styled.div`\n\n  margin: 15px;\n\n`;","import { useState, useEffect} from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovies } from '../../servisAPI/servisAPI';\nimport { Form } from './Movies.styled';\n\nimport PropTypes from 'prop-types';\nimport MovieList from '../../components/MovieList/MoviesList';\n\nconst Movies = () => { \n  const [movie, setMovie] = useState([]);\n  const [nameMovie, setNameMovie] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: nameMovie });\n  };\n\n  useEffect(() => {  \n    const fetchMovie = async () => {\n      const data = await getMovies(query);\n      setMovie(data);\n    };\n    fetchMovie();\n  }, [query]);\n\n  const handleChange = event => {\n    setNameMovie(event.target.value);\n  };\n\n  return (\n    <Form>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={nameMovie}\n          name=\"search\"\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n      <MovieList item={movie} />\n    </Form>\n  );\n};\n\nexport default Movies;\n\nMovies.propTypes = {\n  movie: PropTypes.array,\n  nameMovie: PropTypes.string,\n  searchParams: PropTypes.string,\n  handleSubmit: PropTypes.func,\n  handleChange: PropTypes.func,\n  MovieList: PropTypes.element,\n};","import axios from 'axios';\n\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '0be6852ca8cd54f03df513633364c09a',\n  },\n});\nconst media_type = 'movie';\nconst time_window = 'week';\n\nexport const getTrending = async () => {\n  console.log();\n  const { data} = await instance.get(`/trending/${media_type}/${time_window}`);\n  return data.results;\n};\n\n\n\nexport const getSearchMovies = async query => {\n  try {\n    const { data } = await instance.get('/search/movie', {\n      params: {\n        query,\n      },\n    });\n    console.log(data.results)\n    return data.results;\n    \n  } catch (error) {\n    alert(error);\n  }\n};\n\n\nexport const getMovieDetails  = async (movieId) => {\n    const { data } = await instance.get(`/movie/${movieId}`);\n      console.log(data);\n    return data;\n};\n\n\nexport const getMovieCredits  = async (movieId) => {\n    const { data } = await instance.get(`/movie/${movieId}/credits`);\n       return data.cast;\n};\n\nexport const getMovieReviews  = async (movieId) => {\n    const { data } = await instance.get(`/movie/${movieId}/reviews`);\n      console.log(data.results);\n    return data.results;\n};\n\nexport const getMovies = query => {\n  if (query === '' || query === null)  {\n    return getTrending();\n  } else {\n    return getSearchMovies(query);\n  }\n};\n\n"],"names":["item","map","id","original_title","to","Form","styled","useState","movie","setMovie","nameMovie","setNameMovie","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchMovie","getMovies","data","onSubmit","event","preventDefault","type","value","name","onChange","target","instance","axios","baseURL","params","api_key","getTrending","console","log","results","getSearchMovies","alert","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}