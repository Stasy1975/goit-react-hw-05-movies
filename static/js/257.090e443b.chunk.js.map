{"version":3,"file":"static/js/257.090e443b.chunk.js","mappings":"0SAGaA,EAAYC,EAAAA,EAAAA,IAAH,iHAOTC,GAAYD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,iOAYTG,GAAWH,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,kEAKRI,EAAeJ,EAAAA,EAAAA,GAAH,6EAMZK,EAAaL,EAAAA,EAAAA,GAAH,2FAMVM,EAASN,EAAAA,EAAAA,IAAH,yCAKNO,EAAOP,EAAAA,EAAAA,GAAH,uFAMJQ,EAAOR,EAAAA,EAAAA,GAAH,gD,SCsDjB,EAxFqB,WAAO,IAAD,IACzB,GAA0BS,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEGC,EAAAA,EAAAA,IAAgBN,GAFnB,OAEVO,EAFU,OAGhBC,QAAQC,IAAIF,GACZR,EAAS,CAACQ,IAJM,gDAMhBC,QAAQC,IAAR,MANgB,yDAAH,qDASjBJ,GACD,GAAE,CAACL,IAIJ,IACMU,EAAY,oBAAGR,EAASS,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAE7C,OACE,4BACGd,GACCA,EAAMe,KACJ,YAOO,IANLC,EAMI,EANJA,GACAC,EAKI,EALJA,eACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,OACAC,EACI,EADJA,YAEA,OACE,UAAChC,EAAD,YACE,4BACE,UAACE,EAAD,CAAW+B,KAAK,SACdC,GAAIX,EADN,WAGE,SAAC,MAAD,IAHF,cAMA,SAAChB,EAAD,CAAQ4B,IAAG,UAxBb,mCAwBa,OAAaH,GAAeI,IAAI,SAE7C,0BACE,UAAC5B,EAAD,YACE,SAACC,EAAD,WACE,wBAAKmB,OAEP,UAACnB,EAAD,0BACe4B,KAAKC,KAAqB,IAAfT,EAAsB,IADhD,QAGA,SAACpB,EAAD,WACE,wCAEF,SAACA,EAAD,UAAOqB,KACP,SAACrB,EAAD,WACE,sCAEF,SAACA,EAAD,UAAOsB,EAAOL,KAAI,SAAAa,GAAI,OAAIA,EAAKC,IAAT,IAAeC,KAAK,eAzBhCd,EA8BnB,IAEJhB,IACC,SAACN,EAAD,WACE,2BACE,UAACC,EAAD,YACE,oDACA,yBACE,SAACF,EAAD,CAAU8B,GAAE,OAAZ,qBAEF,yBACE,SAAC9B,EAAD,CAAU8B,GAAE,UAAZ,2BAGJ,SAAC,KAAD,WAMX,C,sLCnGKQ,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAMAC,EAAW,mCAAG,6FACzB1B,QAAQC,MADiB,SAEHoB,EAASM,IAAT,oBALL,QAKK,YAJJ,SAEO,uBAEjB5B,EAFiB,EAEjBA,KAFiB,kBAGlBA,EAAK6B,SAHa,2CAAH,qDAQXC,EAAe,mCAAG,WAAMC,GAAN,kGAEJT,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNM,MAAAA,KAJuB,uBAEnB/B,EAFmB,EAEnBA,KAKRC,QAAQC,IAAIF,EAAK6B,SAPU,kBAQpB7B,EAAK6B,SARe,gCAW3BG,MAAM,EAAD,IAXsB,yDAAH,sDAgBfjC,EAAe,mCAAI,WAAON,GAAP,yFACL6B,EAASM,IAAT,iBAAuBnC,IADlB,uBACpBO,EADoB,EACpBA,KACNC,QAAQC,IAAIF,GAFc,kBAGrBA,GAHqB,2CAAJ,sDAOfiC,EAAe,mCAAI,WAAOxC,GAAP,yFACL6B,EAASM,IAAT,iBAAuBnC,EAAvB,aADK,uBACpBO,EADoB,EACpBA,KADoB,kBAElBA,EAAKkC,MAFa,2CAAJ,sDAKfC,EAAe,mCAAI,WAAO1C,GAAP,yFACL6B,EAASM,IAAT,iBAAuBnC,EAAvB,aADK,uBACpBO,EADoB,EACpBA,KACNC,QAAQC,IAAIF,EAAK6B,SAFS,kBAGrB7B,EAAK6B,SAHgB,2CAAJ,sDAMfO,EAAY,SAAAL,GACvB,MAAc,KAAVA,GAA0B,OAAVA,EACXJ,IAEAG,EAAgBC,EAE1B,C","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","servisAPI/servisAPI.jsx"],"sourcesContent":["import styled from '@emotion/styled'\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  padding-right: 15px;\n  padding-left: 15px;\n`;\n\nexport const BtnGoBack = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  background-color: transparent;\n  border-color: tan;\n  border-radius: 5px;\n  cursor: pointer;\n  padding: 3px;\n  margin-bottom: 5px;\n  margin-top: 5px;\n`;\n\nexport const Podcasts = styled(NavLink)`\n  display: flex;\n  margin-bottom: 15px;\n`;\n\nexport const ListPodcasts = styled.ul`\n  padding: 15px;\n  list-style: none;\n  margin: 0;\n`;\n\nexport const ListBorder = styled.ul`\n  border-top: 1px solid black;\n  border-bottom: 1px solid black;\n`;\n\n\nexport const Poster = styled.img`\n  width: 300px;\n`;\n\n\nexport const List = styled.ul`\n  padding-left: 0;\n  margin-left: 60px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 30px;\n`;","import { useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getMovieDetails } from '../../servisAPI/servisAPI';\nimport { AiOutlineDoubleLeft } from 'react-icons/ai';\nimport {\n  Container,\n  List,\n  Item,\n  BtnGoBack,\n  Poster,\n  Podcasts,\n  ListPodcasts,\n  ListBorder,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const data = await getMovieDetails(movieId);\n        console.log(data)\n        setMovie([data]);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovies();\n  }, [movieId]);\n\n\n\n  const image = 'https://image.tmdb.org/t/p/w500';\n  const backLinkHref = location.state?.from ?? \"/movies\";\n\n  return (\n    <main>\n      {movie &&\n        movie.map(\n          ({\n            id,\n            original_title,\n            vote_average,\n            overview,\n            genres,\n            poster_path,\n          }) => {\n            return (\n              <Container key={id}>\n                <div>\n                  <BtnGoBack type=\"button\"\n                    to={backLinkHref}>\n                                    \n                    <AiOutlineDoubleLeft />\n                    Go Back\n                  </BtnGoBack>\n                  <Poster src={`${image}${poster_path}`} alt=\"\" />\n                </div>\n                <div>\n                  <List>\n                    <Item>\n                      <h2>{original_title}</h2>\n                    </Item>\n                    <Item>\n                      User Score: {Math.ceil((vote_average * 100) / 10)}%\n                    </Item>\n                    <Item>\n                      <h3>Overview</h3>\n                    </Item>\n                    <Item>{overview}</Item>\n                    <Item>\n                      <h4>Genres</h4>\n                    </Item>\n                    <Item>{genres.map(item => item.name).join(', ')}</Item>\n                  </List>\n                </div>\n              </Container>\n            );\n          }\n        )}\n      {movie && (\n        <ListPodcasts>\n          <li>\n            <ListBorder>\n              <li>Additional information</li>\n              <li>\n                <Podcasts to={`cast`}>Cast</Podcasts>\n              </li>\n              <li>\n                <Podcasts to={`reviews`}>Reviews</Podcasts>\n              </li>\n            </ListBorder>\n            <Outlet />\n          </li>\n        </ListPodcasts>\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n  movie: PropTypes.array,\n  image: PropTypes.string,\n  AiOutlineArrowLeft: PropTypes.element,\n  Item: PropTypes.element,\n  Podcasts: PropTypes.string,\n};","import axios from 'axios';\n\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '0be6852ca8cd54f03df513633364c09a',\n  },\n});\nconst media_type = 'movie';\nconst time_window = 'week';\n\nexport const getTrending = async () => {\n  console.log();\n  const { data} = await instance.get(`/trending/${media_type}/${time_window}`);\n  return data.results;\n};\n\n\n\nexport const getSearchMovies = async query => {\n  try {\n    const { data } = await instance.get('/search/movie', {\n      params: {\n        query,\n      },\n    });\n    console.log(data.results)\n    return data.results;\n    \n  } catch (error) {\n    alert(error);\n  }\n};\n\n\nexport const getMovieDetails  = async (movieId) => {\n    const { data } = await instance.get(`/movie/${movieId}`);\n      console.log(data);\n    return data;\n};\n\n\nexport const getMovieCredits  = async (movieId) => {\n    const { data } = await instance.get(`/movie/${movieId}/credits`);\n       return data.cast;\n};\n\nexport const getMovieReviews  = async (movieId) => {\n    const { data } = await instance.get(`/movie/${movieId}/reviews`);\n      console.log(data.results);\n    return data.results;\n};\n\nexport const getMovies = query => {\n  if (query === '' || query === null)  {\n    return getTrending();\n  } else {\n    return getSearchMovies(query);\n  }\n};\n\n"],"names":["Container","styled","BtnGoBack","NavLink","Podcasts","ListPodcasts","ListBorder","Poster","List","Item","useState","movie","setMovie","movieId","useParams","location","useLocation","useEffect","fetchMovies","getMovieDetails","data","console","log","backLinkHref","state","from","map","id","original_title","vote_average","overview","genres","poster_path","type","to","src","alt","Math","ceil","item","name","join","instance","axios","baseURL","params","api_key","getTrending","get","results","getSearchMovies","query","alert","getMovieCredits","cast","getMovieReviews","getMovies"],"sourceRoot":""}